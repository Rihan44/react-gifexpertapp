{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFecthGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMA0CeA,EAtCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,aADA,CACA,QAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEJ,GACA,mCAETC,EALa,iDAKmCC,UAAUH,GAL7C,kBAEJ,GAFI,oBAGJ,oCAHI,SAMAI,MAAMF,GANN,cAMbG,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAiBZM,GAjBY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCqBDO,EAxBQ,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAX,GAEFS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAKtB,CAACpB,IAEGqB,EDnByBI,CAAazB,GAAhCa,EAAb,EAAON,KAAca,EAArB,EAAqBA,QAErB,OACI,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEV,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEiBlBe,EA/Ba,WAGxB,MAAoCxC,mBAAS,CAAC,0BAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAGO0C,EAAWlB,KAAK,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCnBjC4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a8075573.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        // Si hay un elemento que agrupe los demas no hacen faltan los fragments\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            >\r\n\r\n            </input>\r\n        </form>  \r\n       \r\n    )\r\n\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const limite = 10;\r\n    const apiKey = 'RJ05eUrXk5oZjhaPpCn1hNSFvJMzxmhH';\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limite}&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n};\r\n\r\n/* getGifs(); */\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFecthGifs } from '../hooks/useFecthGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFecthGifs(category);\r\n    \r\n    return (\r\n        <>\r\n          <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n          {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFecthGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n        \r\n        getGifs(category)\r\n            .then(images => {\r\n\r\n                setstate({\r\n                    data: images,\r\n                    loading: false\r\n                });\r\n\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state; // es la {data: [], loading: true}\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    /* const categories = ['One Punch', 'Dragon Ball', 'Deamon Slayer']; */\r\n    const [categories, setCategories] = useState(['Boku No Hero Academia']);\r\n\r\n   /*  const handleAdd = () => {\r\n        setCategories([...categories,'Boku No Hero Academia']);\r\n       /*  setCategories( cats => [...cats,'Boku No Hero Academia']); \r\n    }; */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    // tiene dos partes el contenido del array y el indice\r\n                   categories.map( (category) => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                   ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}